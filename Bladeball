local ArrayField = loadstring(game:HttpGet("https://raw.githubusercontent.com/cracklua/cracks/m/sources/pitbull/Library/Key%20System.lua"))()

setclipboard("SOON")

local Window = ArrayField:CreateWindow({
    Name = "VINCENT HUB ",
    LoadingTitle = "Loading",
    LoadingSubtitle = "by vincent",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "VINCENT HUB "
    },
    Discord = {
        Enabled = true,
        Invite = "yfKUvY6r",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "VINCENT HUB",
        Subtitle = "Key System",
        Note = "To get the key join our discord (SOON)",
        FileName = "VINCENT HUB  Key System",
        SaveKey = True,
        GrabKeyFromSite = false,
        Key = {"2VoLiZ9Gbngzm87LB1F9",'GFqQb6oFl4K97m2I735guR7Vw4ez6gELs9gHdNJcCee2aYPqjL'},
        Actions = {
            [1] = {
                Text = 'Link from our discord copied to your clipboard',
                OnPress = function()
                end,
            }
        },
    }
})

ArrayField:Destroy()

local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/cracklua/cracks/m/sources/pitbull/Library/V5.lua"))()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/cracklua/cracks/m/sources/pitbull/Library/V4.lua"))()

local Stats = game:GetService('Stats')

local Players = game:GetService('Players')

local RunService = game:GetService('RunService')

local ReplicatedStorage = game:GetService('ReplicatedStorage')

local Nurysium_Util = loadstring(game:HttpGet('https://raw.githubusercontent.com/cracklua/cracks/m/sources/pitbull/Scripts/Blade%20Ball.lua'))()

local local_player = Players.LocalPlayer

local camera = workspace.CurrentCamera

local nurysium_Data = nil

local hit_Sound = nil

local closest_Entity = nil

local parry_remote = nil

getgenv().aura_Enabled = false

getgenv().hit_sound_Enabled = false

getgenv().hit_effect_Enabled = false

getgenv().night_mode_Enabled = false

getgenv().trail_Enabled = false

getgenv().self_effect_Enabled = false

local Services = {

    game:GetService('AdService'),

    game:GetService('SocialService')

}

function initializate(dataFolder_name: string)

    local nurysium_Data = Instance.new('Folder', game:GetService('CoreGui'))

    nurysium_Data.Name = dataFolder_name

    hit_Sound = Instance.new('Sound', nurysium_Data)

    hit_Sound.SoundId = 'rbxassetid://936447863'

    hit_Sound.Volume = 5

end

local function get_closest_entity(Object: Part)

    task.spawn(function()

        local closest

        local max_distance = math.huge

        for index, entity in workspace.Alive:GetChildren() do

            if entity.Name ~= Players.LocalPlayer.Name then

                local distance = (Object.Position - entity.HumanoidRootPart.Position).Magnitude

                if distance < max_distance then

                    closest_Entity = entity

                    max_distance = distance

                end

            end

        end

        return closest_Entity

    end)

end

function resolve_parry_Remote()

    for _, value in Services do

        local temp_remote = value:FindFirstChildOfClass('RemoteEvent')

        if not temp_remote then

            continue

        end

        if not temp_remote.Name:find('\n') then

            continue

        end

        parry_remote = temp_remote

    end

end

local aura_table = {

    canParry = true,

    is_Spamming = false,

    parry_Range = 0,

    spam_Range = 0,  

    hit_Count = 0,

    hit_Time = tick(),

    ball_Warping = tick(),

    is_ball_Warping = false

}

ReplicatedStorage.Remotes.ParrySuccess.OnClientEvent:Connect(function()

    if getgenv().hit_sound_Enabled then

        hit_Sound:Play()

    end

    if getgenv().hit_effect_Enabled then

        local hit_effect = game:GetObjects("rbxassetid://17407244385")[1]

        hit_effect.Parent = Nurysium_Util.getBall()

        hit_effect:Emit(3)

        

        task.delay(5, function()

            hit_effect:Destroy()

        end)

    end

end)

ReplicatedStorage.Remotes.ParrySuccessAll.OnClientEvent:Connect(function()

    aura_table.hit_Count += 1

    task.delay(0.15, function()

        aura_table.hit_Count -= 1

    end)

end)

workspace:WaitForChild("Balls").ChildRemoved:Connect(function(child)

    aura_table.hit_Count = 0

    aura_table.is_ball_Warping = false

    aura_table.is_Spamming = false

end)

task.defer(function()

    game:GetService("RunService").Heartbeat:Connect(function()

        if not local_player.Character then

            return

        end

        if getgenv().trail_Enabled then

            local trail = game:GetObjects("rbxassetid://17483658369")[1]

            trail.Name = 'nurysium_fx'

            if local_player.Character.PrimaryPart:FindFirstChild('nurysium_fx') then

                return

            end

            local Attachment0 = Instance.new("Attachment", local_player.Character.PrimaryPart)

            local Attachment1 = Instance.new("Attachment", local_player.Character.PrimaryPart)

            Attachment0.Position = Vector3.new(0, -2.411, 0)

            Attachment1.Position = Vector3.new(0, 2.504, 0)

            trail.Parent = local_player.Character.PrimaryPart

            trail.Attachment0 = Attachment0

            trail.Attachment1 = Attachment1

        else

            

            if local_player.Character.PrimaryPart:FindFirstChild('nurysium_fx') then

                local_player.Character.PrimaryPart['nurysium_fx']:Destroy()

            end

        end

    end)

end)

task.defer(function()

    while task.wait(1) do

        if getgenv().night_mode_Enabled then

            game:GetService("TweenService"):Create(game:GetService("Lighting"), TweenInfo.new(3), {ClockTime = 3.9}):Play()

        else

            game:GetService("TweenService"):Create(game:GetService("Lighting"), TweenInfo.new(3), {ClockTime = 13.5}):Play()

        end

    end

end)

task.spawn(function()

    RunService.PreRender:Connect(function()

        if not getgenv().aura_Enabled then

            return

        end

        if closest_Entity then

            if workspace.Alive:FindFirstChild(closest_Entity.Name) and workspace.Alive:FindFirstChild(closest_Entity.Name).Humanoid.Health > 0 then

                if aura_table.is_Spamming then

                    if local_player:DistanceFromCharacter(closest_Entity.HumanoidRootPart.Position) <= aura_table.spam_Range then   

                        parry_remote:FireServer(

                            0.5,

                            CFrame.new(camera.CFrame.Position, Vector3.zero),

                            {[closest_Entity.Name] = closest_Entity.HumanoidRootPart.Position},

                            {closest_Entity.HumanoidRootPart.Position.X, closest_Entity.HumanoidRootPart.Position.Y},

                            false

                        )

                    end

                end

            end

        end

    end)

    RunService.Heartbeat:Connect(function()

        if not getgenv().aura_Enabled then

            return

        end

        local ping = Stats.Network.ServerStatsItem['Data Ping']:GetValue() / 10

        local self = Nurysium_Util.getBall()

        if not self then

            return

        end

        self:GetAttributeChangedSignal('target'):Once(function()

            aura_table.canParry = true

        end)

        if self:GetAttribute('target') ~= local_player.Name or not aura_table.canParry then

            return

        end

        get_closest_entity(local_player.Character.PrimaryPart)

        local player_Position = local_player.Character.PrimaryPart.Position

        local ball_Position = self.Position

        local ball_Velocity = self.AssemblyLinearVelocity

        if self:FindFirstChild('zoomies') then

            ball_Velocity = self.zoomies.VectorVelocity

        end

        local ball_Direction = (local_player.Character.PrimaryPart.Position - ball_Position).Unit

        local ball_Distance = local_player:DistanceFromCharacter(ball_Position)

        local ball_Dot = ball_Direction:Dot(ball_Velocity.Unit)

        local ball_Speed = ball_Velocity.Magnitude

        local ball_speed_Limited = math.min(ball_Speed / 1000, 0.1)

        local ball_predicted_Distance = (ball_Distance - ping / 15.5) - (ball_Speed / 3.5)

        local target_Position = closest_Entity.HumanoidRootPart.Position

        local target_Distance = local_player:DistanceFromCharacter(target_Position)

        local target_distance_Limited = math.min(target_Distance / 10000, 0.1)

        local target_Direction = (local_player.Character.PrimaryPart.Position - closest_Entity.HumanoidRootPart.Position).Unit

        local target_Velocity = closest_Entity.HumanoidRootPart.AssemblyLinearVelocity

        local target_isMoving = target_Velocity.Magnitude > 0

        local target_Dot = target_isMoving and math.max(target_Direction:Dot(target_Velocity.Unit), 0)

        aura_table.spam_Range = math.max(ping / 10, 15) + ball_Speed / 7

        aura_table.parry_Range = math.max(math.max(ping, 4) + ball_Speed / 3.5, 9.5)

        aura_table.is_Spamming = aura_table.hit_Count > 1 or ball_Distance < 13.5

        if ball_Dot < -0.2 then

            aura_table.ball_Warping = tick()

        end

        task.spawn(function()

            if (tick() - aura_table.ball_Warping) >= 0.15 + target_distance_Limited - ball_speed_Limited or ball_Distance <= 10 then

                aura_table.is_ball_Warping = false

                return

            end

            aura_table.is_ball_Warping = true

        end)

        if ball_Distance <= aura_table.parry_Range and not aura_table.is_Spamming and not aura_table.is_ball_Warping then

            parry_remote:FireServer(

                0.5,

                CFrame.new(camera.CFrame.Position, Vector3.new(math.random(0, 100), math.random(0, 1000), math.random(100, 1000))),

                {[closest_Entity.Name] = target_Position},

                {target_Position.X, target_Position.Y},

                false

            )

            aura_table.canParry = false

            aura_table.hit_Time = tick()

            aura_table.hit_Count += 1

            task.delay(0.15, function()

                aura_table.hit_Count -= 1

            end)

        end

        task.spawn(function()

            repeat

                RunService.Heartbeat:Wait()

            until (tick() - aura_table.hit_Time) >= 1

                aura_table.canParry = true

        end)

    end)

end)

initializate('nurysium_temp')

spawn(function()
    while true do
        wait(0.01)
        if getgenv().ASC then
            game:GetService("ReplicatedStorage").Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalSwordCrate)
        end
    end
end)

spawn(function()
    while true do
        wait(0.01)
        if getgenv().AEC then
            game:GetService("ReplicatedStorage").Remote.RemoteFunction:InvokeServer("PromptPurchaseCrate", workspace.Spawn.Crates.NormalExplosionCrate)
        end
    end
end)

spawn(function()
    local TweenService = game:GetService("TweenService")
    local plr = game.Players.LocalPlayer
    local Ball = workspace:WaitForChild("Balls")
    local currentTween = nil

    while true do
        wait(0.001)
        if getgenv().FB then
            local ball = Ball:FindFirstChildOfClass("Part")
            local char = plr.Character
            if ball and char then
                local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, false, 0)
                local distance = (char.PrimaryPart.Position - ball.Position).magnitude
                if distance <= 1000 then 
                    if currentTween then
                        currentTween:Pause()
                    end
                    currentTween = TweenService:Create(char.PrimaryPart, tweenInfo, {CFrame = ball.CFrame})
                    currentTween:Play()
                end
            end
        else
            if currentTween then
                currentTween:Pause()
                currentTween = nil
            end
        end
    end
end)

local function getExecutorName()
    local executor = "Unknown"
    
    if getexecutorname then
        executor = getexecutorname()
    end
    
    return executor
end

local executorName = getExecutorName()

if executorName == "Solara" then
    local Notify = Library:MakeNotify({
        Title = "CRACKLED HUB BY FROSTLUA ",
        Text = "CRACKLED HUB BY FROSTLUA  has determined that your executor, " .. executorName .. ", is fully compatible, ensuring an optimal and satisfying experience with our product.",
        Time = 5
      })

    local old
    old = hookmetamethod(
        game,
        "__namecall",
        function(self, ...)
            local method = tostring(getnamecallmethod())
            if string.lower(method) == "kick" then
                return wait(9e9)
            end
            return old(self, ...)
        end)

        local AntiKick = coroutine.create(function()
            ReplicatedStorage.Security.RemoteEvent:Destroy()
            ReplicatedStorage.Security[""]:Destroy()
            ReplicatedStorage.Security:Destroy()
            LocalPlayer.PlayerScripts.Client.DeviceChecker:Destroy()
            task.wait()
        
        end)
        
        coroutine.resume(AntiKick)
else
    local Notify = Library:MakeNotify({
        Title = "CRACKLED HUB BY FROSTLUA ",
        Text = "CRACKLED HUB BY FROSTLUA  has determined that your executor, " .. executorName .. ", is fully compatible, ensuring an optimal and satisfying experience with our product.",
        Time = 5
      })

    local old
    old = hookmetamethod(
        game,
        "__namecall",
        function(self, ...)
            local method = tostring(getnamecallmethod())
            if string.lower(method) == "kick" then
                return wait(9e9)
            end
            return old(self, ...)
        end)

        local AntiKick = coroutine.create(function()
            ReplicatedStorage.Security.RemoteEvent:Destroy()
            ReplicatedStorage.Security[""]:Destroy()
            ReplicatedStorage.Security:Destroy()
            LocalPlayer.PlayerScripts.Client.DeviceChecker:Destroy()
            task.wait()
        
        end)
        
        coroutine.resume(AntiKick)
end


local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name

local player = game.Players.LocalPlayer

local playerName = player.DisplayName

local function getExecutorName()
    local executor = "Unknown"
    
    if getexecutorname then
        executor = getexecutorname()
    end
    
    return executor
end

local executorName = getExecutorName()

local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name

local gameId = game.PlaceId

local executorName = identifyexecutor and identifyexecutor() or "Unknown Executor"

redzlib.Themes.DarkRed = {
    ["Color Hub 1"] = ColorSequence.new({
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(28, 23, 25.5)),
        ColorSequenceKeypoint.new(0.50, Color3.fromRGB(30.5, 30.5, 30.5)),
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(28, 23, 25.5))
    }),
    ["Color Hub 2"] = Color3.fromRGB(28, 28, 28),
    ["Color Stroke"] = Color3.fromRGB(38, 38, 38),
    ["Color Theme"] = Color3.fromRGB(255, 0, 0),
    ["Color Text"] = Color3.fromRGB(240, 240, 240),
    ["Color Dark Text"] = Color3.fromRGB(180, 180, 180)
}  

local Window = redzlib:MakeWindow({
    Title = "CRACKLED HUB BY FROSTLUA  | " .. gameName,
    SubTitle = "by Belico2 and alexis.isback00",
    SaveFolder = "CRACKLED HUB BY FROSTLUA "
})

redzlib:SetTheme("DarkRed")

local Tab1 = Window:MakeTab({"| Home", "rbxassetid://17781992617"})
local Tab2 = Window:MakeTab({"| Player", "rbxassetid://18170270692"})
local Tab7 = Window:MakeTab({"| Visual", "rbxassetid://18556609036"})
local Tab3 = Window:MakeTab({"| Combat", "rbxassetid://18170269266"})
local Tab4 = Window:MakeTab({"| Shop", "rbxassetid://18170268224"})
local Tab77 = Window:MakeTab({"| Music", "rbxassetid://18556186273"})
local Tab5 = Window:MakeTab({"| Tools", "rbxassetid://18170704671"})

Window:SelectTab(Tab1)

Tab1:AddDiscordInvite({
    Name = "CRACKLED HUB BY FROSTLUA  Roblox",
    Logo = "rbxassetid://18568712042",
    Invite = "https://discord.gg/d8Yp6qFmSH"
})

local Paragraph = Tab1:AddParagraph({"Join us discord for information about updates!", ""})

Window:AddMinimizeButton({
    Button = {
        Image = "rbxassetid://18568712042"
    },
    UICorner = {true,
    CornerRadius = UDim.new(0.5, 0)
},
UIStroke = {false, {

}}
})

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local originalSpeed = character.Humanoid.WalkSpeed
local originalFov = game:GetService("Workspace").Camera.FieldOfView

local speedEnabled = false
local fovEnabled = false
local speedValue = 36
local fovValue = 80

local function applySpeed()
    if speedEnabled then
        character.Humanoid.WalkSpeed = speedValue
    else
        character.Humanoid.WalkSpeed = originalSpeed
    end
end

local function applyFov()
    if fovEnabled then
        game:GetService("Workspace").Camera.FieldOfView = fovValue
    else
        game:GetService("Workspace").Camera.FieldOfView = originalFov
    end
end

local function onCharacterAdded(newCharacter)
    character = newCharacter
    character:WaitForChild("Humanoid")
    applySpeed()
end

player.CharacterAdded:Connect(onCharacterAdded)

character:WaitForChild("Humanoid").Died:Connect(function()
    applySpeed()
    applyFov()
end)

local Section = Tab2:AddSection({"Player"})

Tab2:AddSlider({
    Name = "Speed",
    Description = "Adjusts the speed of the object.",
    Min = 36,
    Max = 1000,
    Increase = 1,
    Default = 36,
    Callback = function(Value)
        speedValue = Value
        applySpeed()
    end
})

Tab2:AddSlider({
    Name = "Fov",
    Description = "Adjusts the field of view of the camera.",
    Min = 80,
    Max = 1000,
    Increase = 1,
    Default = 80,
    Callback = function(Value)
        fovValue = Value
        applyFov()
    end
})

local Section = Tab2:AddSection({"Enable Toggle"})

Tab2:AddToggle({
    Name = "Enable Speed",
    Description = "Enables or disables speed control.",
    Default = false,
    Callback = function(Value)
        speedEnabled = Value
        applySpeed()
    end
})

Tab2:AddToggle({
    Name = "Enable Fov",
    Description = "Enables or disables FOV control.",
    Default = false,
    Callback = function(Value)
        fovEnabled = Value
        applyFov()
    end
})

game:GetService("RunService").RenderStepped:Connect(function()
    if speedEnabled then
        character.Humanoid.WalkSpeed = speedValue
    end
    if fovEnabled then
        game:GetService("Workspace").Camera.FieldOfView = fovValue
    end
end)

local Section = Tab2:AddSection({"Tools"})

local InfiniteJumpEnabled = false

game:GetService("UserInputService").JumpRequest:Connect(function()
    if InfiniteJumpEnabled then
        game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState("Jumping")
    end
end)

local Toggle1 = Tab2:AddToggle({
    Name = "Infinite Jump",
    Description = "Allows the character to jump indefinitely without touching the ground.",
    Default = false,
    Callback = function(state)
        InfiniteJumpEnabled = state
    end
})

local Toggle1 = Tab2:AddToggle({
    Name = "Night Mode",
    Description = "Enables or disables night mode, changing the overall lighting.",
    Default = false,
    Callback = function(Value)
        getge
